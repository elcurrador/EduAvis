<Window 
    x:Class="EduAvis.Frontend.Windows.Dialog.AddNewIncident"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:local="clr-namespace:EduAvis.Frontend.Windows.Dialog"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:mat="http://materialdesigninxaml.net/winfx/xaml/themes"
    mc:Ignorable="d"
    WindowStyle="None"
    WindowStartupLocation="CenterScreen"
    AllowsTransparency="True"
    Background="Transparent"
    Title="Add New Incident" 
    Height="700" 
    Width="900">

    <Window.Resources>
        <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
            <Setter Property="Background" Value="#304559"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#3498DB"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>
        <Style x:Key="CustomCheckBoxStyle" TargetType="CheckBox">
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="FontSize" Value="13"/>
            <Setter Property="Margin" Value="0,5"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
        </Style>
        <Style x:Key="CustomTextBoxStyle" TargetType="TextBox">
            <Setter Property="Background" Value="#304559"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#3498DB"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
        </Style>
        <Style x:Key="SectionTitleStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="#3498DB"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Margin" Value="0,15,0,10"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
        </Style>
        <Style x:Key="CustomDatePickerStyle" TargetType="DatePicker">
            <Setter Property="Background" Value="#304559"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#3498DB"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="DatePicker">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- TextBox showing selected date -->
                            <DatePickerTextBox x:Name="PART_TextBox"
                                       Grid.Column="0"
                                       Background="{TemplateBinding Background}"
                                       Foreground="{TemplateBinding Foreground}"
                                       BorderBrush="{TemplateBinding BorderBrush}"
                                       BorderThickness="{TemplateBinding BorderThickness}"
                                       Padding="{TemplateBinding Padding}"
                                       FontSize="{TemplateBinding FontSize}"
                                       FontWeight="{TemplateBinding FontWeight}"
                                       VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                       HorizontalContentAlignment="Left" />

                            <!-- Calendar button -->
                            <Button x:Name="PART_Button"
                            Grid.Column="1"
                            Margin="8,0,0,0"
                            Padding="5"
                            Width="25"
                            Background="Transparent"
                            BorderThickness="0"
                            HorizontalAlignment="Right"
                            Focusable="False">
                                <Path Data="M12,15.5A1.5,1.5 0 0,1 10.5,14A1.5,1.5 0 0,1 12,12.5A1.5,1.5 0 0,1 13.5,14A1.5,1.5 0 0,1 12,15.5M19,19H5V8H19M19,3H18V1H16V3H8V1H6V3H5A2,2 0 0,0 3,5V19A2,2 0 0,0 5,21H19A2,2 0 0,0 21,19V5A2,2 0 0,0 19,3Z"
                              Fill="#3498DB"
                              Width="14"
                              Height="14"
                              Stretch="Uniform" />
                            </Button>

                            <!-- Calendar popup -->
                            <Popup x:Name="PART_Popup"
                           Placement="Bottom"
                           AllowsTransparency="True"
                           Focusable="False"
                           StaysOpen="False">
                                <Border BorderBrush="#3498DB"
                                BorderThickness="1"
                                Background="#1E2B38">
                                    <Calendar x:Name="PART_Calendar"
                                      Background="#1E2B38"
                                      Foreground="White"
                                      BorderThickness="0"
                                      SelectionMode="SingleDate" />
                                </Border>
                            </Popup>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CustomTimePickerStyle" TargetType="mat:TimePicker">
            <Setter Property="Background" Value="#304559"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderBrush" Value="#3498DB"/>
            <Setter Property="BorderThickness" Value="0,0,0,1"/>
            <Setter Property="Padding" Value="8"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="Margin" Value="0,0,0,10"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Is24Hours" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="mat:TimePicker">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <!-- TextBox showing selected time -->
                            <TextBox x:Name="PART_TextBox"
                             Grid.Column="0"
                             Background="{TemplateBinding Background}"
                             Foreground="{TemplateBinding Foreground}"
                             BorderBrush="{TemplateBinding BorderBrush}"
                             BorderThickness="{TemplateBinding BorderThickness}"
                             Padding="{TemplateBinding Padding}"
                             FontSize="{TemplateBinding FontSize}"
                             FontWeight="{TemplateBinding FontWeight}"
                             VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                             HorizontalContentAlignment="Left" />

                            <!-- Clock button -->
                            <Button x:Name="PART_Button"
                            Grid.Column="1"
                            Foreground="{TemplateBinding Foreground}"
                            Focusable="False"
                            HorizontalAlignment="Right"
                            Margin="8,0,0,0"
                            Padding="5"
                            Background="Transparent"
                            BorderThickness="0"
                            Width="25">
                                <Path Data="M12,20A8,8 0 0,0 20,12A8,8 0 0,0 12,4A8,8 0 0,0 4,12A8,8 0 0,0 12,20M12,2A10,10 0 0,1 22,12A10,10 0 0,1 12,22C6.47,22 2,17.5 2,12A10,10 0 0,1 12,2M12.5,7V12.25L17,14.92L16.25,16.15L11,13V7H12.5Z"
                              Fill="#3498DB"
                              Width="14"
                              Height="14"
                              Stretch="Uniform" />
                            </Button>

                            <!-- Time selection popup -->
                            <Popup x:Name="PART_Popup"
                           AllowsTransparency="True"
                           Placement="Bottom"
                           StaysOpen="False" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CloseButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="#ECF0F1"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Width" Value="30"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                          BorderBrush="{TemplateBinding BorderBrush}" 
                          BorderThickness="{TemplateBinding BorderThickness}"
                          CornerRadius="15">
                            <TextBlock Text="✕" 
                                 FontSize="16" 
                                 FontWeight="Bold"
                                 Foreground="{TemplateBinding Foreground}" 
                                 HorizontalAlignment="Center" 
                                 VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#E74C3C"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="ButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="120"/>
            <Setter Property="Height" Value="40"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Margin" Value="10,0"/>
            <Setter Property="Padding" Value="15,5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Cursor" Value="Hand"/>
            
            
        </Style>
    </Window.Resources>

    <Border CornerRadius="15" Background="#1E2B38">
        
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="70"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="70"/>
            </Grid.RowDefinitions>

            <!-- Header -->
            <Border Background="#2C3E50" CornerRadius="15,15,0,0">
                <Grid>
                    <TextBlock 
                        Text="NEW INCIDENT" 
                        HorizontalAlignment="Center" 
                        VerticalAlignment="Center"
                        FontSize="26" 
                        Foreground="White" 
                        FontWeight="Bold"/>

                    <Button Style="{StaticResource CloseButtonStyle}" 
                            HorizontalAlignment="Right" 
                            VerticalAlignment="Top" 
                            Margin="15" 
                            x:Name="closeButton"                             
                            Click="CloseButton_Click"/>

                </Grid>
            </Border>

            <!-- Content -->
            <Grid Grid.Row="1" Margin="30,10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Left Column -->
                <StackPanel Grid.Column="0" Margin="0,5,15,5">
                    <!-- Teacher Selection Section -->
                    <TextBlock 
                        Text="TEACHER INFORMATION" 
                        Style="{StaticResource SectionTitleStyle}"/>

                    <Border Background="#263545" CornerRadius="10" Padding="15" Margin="0,0,0,15">
                        <StackPanel>
                            <TextBlock 
                                Text="Select the teacher related to the incident" 
                                Foreground="#E0E0E0" 
                                FontSize="13" 
                                Margin="0,0,0,10"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox 
                                    Grid.Column="0"
                                    mat:HintAssist.Hint="Teacher Group"
                                    Style="{StaticResource CustomComboBoxStyle}"
                                    ItemsSource="{Binding groupList}"
                                    SelectedItem="{Binding groupTeacherSelected}"
                                    DisplayMemberPath="GroupName"
                                    Foreground="#1E2B38"
                                    x:Name="cbGroupTeacher"
                                    Margin="0,0,5,0"/>

                                <ComboBox 
                                    Grid.Column="1"
                                    mat:HintAssist.Hint="Teacher"
                                    ItemsSource="{Binding FilteredTeachers}"
                                    SelectedValuePath="Dni"
                                    SelectedValue="{Binding incident.TeacherDni, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}"
                                    DisplayMemberPath="FullName"
                                    Style="{StaticResource CustomComboBoxStyle}"
                                    Foreground="#1E2B38"
                                    x:Name="cbTeacher"
                                    Margin="5,0,0,0"/>

                            </Grid>

                            <CheckBox 
                                    Content="Is the teacher writing the report?"
                                    Style="{StaticResource CustomCheckBoxStyle}"
                                    Margin="0,15,0,0"
                                    x:Name="cbIsWritingReport"
                                    Checked="cbIsWritingReport_Checked"
                                    Unchecked="cbIsWritingReport_Unchecked"/>

                        </StackPanel>
                    </Border>

                    <!-- Reason Section -->
                    <TextBlock 
                        Text="REASON" 
                        Style="{StaticResource SectionTitleStyle}"/>

                    <Border Background="#263545" CornerRadius="10" Padding="15" Margin="0,0,0,15">
                        <StackPanel>
                            <TextBlock 
                                Text="Select the reason for the incident" 
                                Foreground="#E0E0E0" 
                                FontSize="13" 
                                Margin="0,0,0,10"/>

                            <ComboBox 
                                mat:HintAssist.Hint="Reason for incident"
                                Style="{StaticResource CustomComboBoxStyle}"
                                ItemsSource="{Binding reasonList}"
                                SelectedItem="{Binding incident.Reason, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}"
                                DisplayMemberPath="ShortDescription"
                                Foreground="#1E2B38"
                                x:Name="cbReason"/>

                        </StackPanel>
                    </Border>

                    <!-- Description Section -->
                    <TextBlock 
                        Text="DESCRIPTION" 
                        Style="{StaticResource SectionTitleStyle}"/>

                    <Border Background="#263545" CornerRadius="10" Padding="15">
                        <TextBox 
                            mat:HintAssist.Hint="Describe the incident in detail"
                            Style="{StaticResource CustomTextBoxStyle}"
                            Background="#304559"
                            Height="120"
                            TextWrapping="Wrap"
                            Text="{Binding incident.ReasonDescription, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}"
                            AcceptsReturn="True"
                            VerticalContentAlignment="Top"
                            x:Name="txtDescription"/>
                    </Border>
                </StackPanel>

                <!-- Right Column -->
                <StackPanel Grid.Column="1" Margin="15,5,0,5">
                    <!-- Student Selection Section -->
                    <TextBlock 
                        Text="STUDENT INFORMATION" 
                        Style="{StaticResource SectionTitleStyle}"/>

                    <Border Background="#263545" CornerRadius="10" Padding="15" Margin="0,0,0,15">
                        <StackPanel>
                            <TextBlock 
                                Text="Select the student related to the incident" 
                                Foreground="#E0E0E0" 
                                FontSize="13" 
                                Margin="0,0,0,10"/>

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>

                                <ComboBox 
                                    Grid.Column="0"
                                    mat:HintAssist.Hint="Group"
                                    Style="{StaticResource CustomComboBoxStyle}"
                                    x:Name="cbGroup"
                                    ItemsSource="{Binding groupList}"
                                    SelectedItem="{Binding groupSelected}"
                                    DisplayMemberPath="GroupName"
                                    Foreground="#1E2B38"
                                    Margin="0,0,5,0" Cursor=""/>

                                <ComboBox 
                                    Grid.Column="1"
                                    mat:HintAssist.Hint="Student"
                                    Style="{StaticResource CustomComboBoxStyle}"                                                  
                                    x:Name="cbStudent"
                                    ItemsSource="{Binding FilteredStudents}"
                                    SelectedValuePath="Nia"
                                    SelectedValue="{Binding incident.StudentNia, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}"
                                    DisplayMemberPath="FullName"
                                    Foreground="#1E2B38"
                                    Margin="5,0,0,0"/>

                            </Grid>
                        </StackPanel>
                    </Border>

                    <!-- Date and Time Section -->
                    <TextBlock 
                        Text="DATE and TIME" 
                        Style="{StaticResource SectionTitleStyle}"/>

                    <Border Background="#263545" CornerRadius="10" Padding="15" Margin="0,0,0,15">
                        <StackPanel>
                            <TextBlock 
                                Text="Please select the date and time when the incident occurred" 
                                Foreground="#E0E0E0" 
                                FontSize="13" 
                                Margin="0,0,0,10"/>

                            <DatePicker 
                                mat:HintAssist.Hint="Select a Date"
                                Style="{StaticResource CustomDatePickerStyle }"
                                Background="Transparent"
                                Margin="0,0,0,10"
                                SelectedDate="{Binding date,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}"
                                x:Name="eventDatePicker"
/>
                      

                            <mat:TimePicker 
                                mat:HintAssist.Hint="Select a time"
                                Style="{StaticResource CustomTimePickerStyle}"
                                Background="Transparent"
                                
                                Is24Hours="True"
                                SelectedTime="{Binding time,ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}"
                                x:Name="eventTimePicker"/>
                        </StackPanel>
                    </Border>

                    <!-- Classification Section -->
                    <TextBlock 
                        Text="CLASSIFICATION" 
                        Style="{StaticResource SectionTitleStyle}"/>

                    <Border Background="#263545" CornerRadius="10" Padding="15">
                        <StackPanel>
                            <TextBlock 
                                Text="Set the classification of the incident" 
                                Foreground="#E0E0E0" 
                                FontSize="13" 
                                Margin="0,0,0,10"/>

                            <CheckBox 
                                Content="Mark as sanction"
                                Style="{StaticResource CustomCheckBoxStyle}"
                                IsChecked="{Binding incident.IsSanction, ValidatesOnDataErrors=True,UpdateSourceTrigger=PropertyChanged,NotifyOnValidationError=True}" />

                             

                        </StackPanel>
                    </Border>
                </StackPanel>
            </Grid>

            <!-- Footer -->
            <Border Grid.Row="2" Background="#263545" CornerRadius="0,0,15,15">
                <Grid>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="20,0">
                        <Button 
                            Content="SAVE" 
                            Style="{StaticResource ButtonStyle}"
                            Background="#3498DB"
                            Foreground="White"
                            Click="Save_Click">
                            <Button.Effect>
                                <DropShadowEffect ShadowDepth="1" Direction="270" Color="#22000000" BlurRadius="3"/>
                            </Button.Effect>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
    </Border>
</Window>
